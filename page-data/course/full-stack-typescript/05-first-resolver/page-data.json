{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/course/full-stack-typescript/05-first-resolver/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Learn TypeScript w/ Mike North","courses":[{"id":"fundamentals-v3","title":"TypeScript Fundamentals v3","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"intermediate-v1","title":"Intermediate TypeScript","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"},{"id":"making-typescript-stick","title":"Making TypeScript Stick","summary":"Tackle a series of challenges designed to reinforce your knowledge and make\nthe important concepts truly \"stick\" in your mind.\n"},{"id":"full-stack-typescript","title":"Full Stack TypeScript","summary":"Combine TypeScript and GraphQL's type systems to create full-stack, fully\ntype-checked code bases that are shockingly easy to refactor and maintain.\n"}]}},"markdownRemark":{"id":"0fbe6999-c3d5-5c23-9992-0bfd3448cbb0","excerpt":"Go back to the server/src/apollo-server.ts file, remove the underscore before _db here and insert the following code immediately before you create an instanceâ€¦","html":"<p>Go back to the <code>server/src/apollo-server.ts</code> file, remove the underscore before <code>_db</code> here</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">diff</div><div class='code-container'><code><div class='line'><span style=\"color: #24292E\">export async function createApolloServer(</span></div><div class='line'><span style=\"color: #B31D28\">-  _db: Db,</span></div><div class='line'><span style=\"color: #22863A\">+  db: Db,</span></div><div class='line'><span style=\"color: #24292E\">  httpServe</span></div></code></div></pre>\n<p>and insert the following code immediately before you create an instance of <code>ApolloServer</code>.</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">resolvers</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  Query: {</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #6F42C1\">currentUser</span><span style=\"color: #24292E\">: () </span><span style=\"color: #D73A49\">=&gt;</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">      </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">        id: </span><span style=\"color: #032F62\">\"123\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">        name: </span><span style=\"color: #032F62\">\"John Doe\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">        handle: </span><span style=\"color: #032F62\">\"johndoe\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">        coverUrl: </span><span style=\"color: #032F62\">\"\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">        avatarUrl: </span><span style=\"color: #032F62\">\"\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">        createdAt: </span><span style=\"color: #032F62\">\"\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">        updatedAt: </span><span style=\"color: #032F62\">\"\"</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">      }</span></div><div class='line'><span style=\"color: #24292E\">    },</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #6F42C1\">suggestions</span><span style=\"color: #24292E\">: () </span><span style=\"color: #D73A49\">=&gt;</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">      </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> []</span></div><div class='line'><span style=\"color: #24292E\">    },</span></div><div class='line'><span style=\"color: #24292E\">  },</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code></div></pre>\n<p>Pass this <code>resolvers</code> variable</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">diff</div><div class='code-container'><code><div class='line'><span style=\"color: #24292E\">  const server = new ApolloServer({</span></div><div class='line'><span style=\"color: #24292E\">    typeDefs,</span></div><div class='line'><span style=\"color: #22863A\">+    resolvers,</span></div><div class='line'><span style=\"color: #22863A\">+    context: () =&gt; ({ db }),</span></div><div class='line'><span style=\"color: #24292E\">    plugins: [ApolloServerPluginDrainHttpServer({ httpServer })],</span></div><div class='line'><span style=\"color: #24292E\">  });</span></div></code></div></pre>\n<p>You should now be able to run the following query in the apollo dev tools.</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">graphql</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">query</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">CurrentUser</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">currentUser</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #E36209\">name</span></div><div class='line'><span style=\"color: #24292E\">  }</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code></div></pre>\n<p>and see a response like</p>\n<pre class=\"shiki github-light twoslash lsp\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">json</div><div class='code-container'><code><div class='line'><span style=\"color: #24292E\">{</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #005CC5\">\"data\"</span><span style=\"color: #24292E\">: {</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #005CC5\">\"currentUser\"</span><span style=\"color: #24292E\">: {</span></div><div class='line'><span style=\"color: #24292E\">      </span><span style=\"color: #005CC5\">\"name\"</span><span style=\"color: #24292E\">: </span><span style=\"color: #032F62\">\"John Doe\"</span></div><div class='line'><span style=\"color: #24292E\">    }</span></div><div class='line'><span style=\"color: #24292E\">  }</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code><a class='playground-link' href='https://www.typescriptlang.org/play/#code/N4KABGBEAmCGAutIC4yghSBjArgJzwFMA7eAVQGdC8U1wNNjYBbQ2yAKQHsALYsACJc29CAF96EsUA'>Try</a></div></pre>","tableOfContents":"","fields":{"slug":"/course/full-stack-typescript/05-first-resolver/"},"frontmatter":{"title":"First Resolver","course":"full-stack-typescript","date":"March 24, 2022","description":"We'll make our first GraphQL resolver, to make our new API queryable\n"}}},"pageContext":{"slug":"/course/full-stack-typescript/05-first-resolver/","title":"First Resolver","course":"full-stack-typescript","order":5,"previous":{"fields":{"slug":"/course/full-stack-typescript/04-hello-apollo/"},"frontmatter":{"title":"Hello Apollo","order":4,"course":"full-stack-typescript","isExercise":null}},"next":{"fields":{"slug":"/course/full-stack-typescript/06-imported-resolver/"},"frontmatter":{"title":"Imported Resolver","order":6,"course":"full-stack-typescript","isExercise":null}}}},
    "staticQueryHashes": ["2785745750","2841359383"]}