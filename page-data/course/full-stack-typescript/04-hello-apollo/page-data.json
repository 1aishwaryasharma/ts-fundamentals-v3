{
    "componentChunkName": "component---src-templates-blog-post-tsx",
    "path": "/course/full-stack-typescript/04-hello-apollo/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Learn TypeScript w/ Mike North","courses":[{"id":"fundamentals-v3","title":"TypeScript Fundamentals v3","summary":"Learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"intermediate-v1","title":"Intermediate TypeScript","summary":"Leverage TypeScript's strengths to provide clarity in the face of\ncomplexity, while protecting your codebase and team from it's weaknesses.\n"},{"id":"making-typescript-stick","title":"Making TypeScript Stick","summary":"Tackle a series of challenges designed to reinforce your knowledge and make\nthe important concepts truly \"stick\" in your mind.\n"},{"id":"full-stack-typescript","title":"Full Stack TypeScript","summary":"Combine TypeScript and GraphQL's type systems to create full-stack, fully\ntype-checked code bases that are shockingly easy to refactor and maintain.\n"}]}},"markdownRemark":{"id":"8ae4eded-4fde-511a-a8bd-045ed5c33eff","excerpt":"Create a new file server/src/apollo-server.ts with the following contents In server/src/index.ts add the following imports Next, add the following two lines…","html":"<p>Create a new file <code>server/src/apollo-server.ts</code> with the following contents</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> { ApolloServerPluginDrainHttpServer } </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"apollo-server-core\"</span></div><div class='line'><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  ApolloServer,</span></div><div class='line'><span style=\"color: #24292E\">  ExpressContext,</span></div><div class='line'><span style=\"color: #24292E\">  gql,</span></div><div class='line'><span style=\"color: #24292E\">} </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"apollo-server-express\"</span></div><div class='line'><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">*</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">as</span><span style=\"color: #24292E\"> express </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"express\"</span></div><div class='line'><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> { Server } </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"http\"</span></div><div class='line'><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> Db </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"./db\"</span></div><div class='line'></div><div class='line'><span style=\"color: #D73A49\">export</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">async</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">function</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">createApolloServer</span><span style=\"color: #24292E\">(</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">_db</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Db</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">httpServer</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Server</span><span style=\"color: #24292E\">,</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">app</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">express</span><span style=\"color: #24292E\">.</span><span style=\"color: #E36209\">Application</span></div><div class='line'><span style=\"color: #24292E\">)</span><span style=\"color: #D73A49\">:</span><span style=\"color: #24292E\"> </span><span style=\"color: #E36209\">Promise</span><span style=\"color: #24292E\">&lt;</span><span style=\"color: #E36209\">ApolloServer</span><span style=\"color: #24292E\">&lt;</span><span style=\"color: #E36209\">ExpressContext</span><span style=\"color: #24292E\">&gt;&gt; {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">typeDefs</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">gql</span><span style=\"color: #032F62\">`</span></div><div class='line'><span style=\"color: #032F62\">    type Query {</span></div><div class='line'><span style=\"color: #032F62\">      currentUser: User!</span></div><div class='line'><span style=\"color: #032F62\">      suggestions: [Suggestion!]!</span></div><div class='line'><span style=\"color: #032F62\">    }</span></div><div class='line'><span style=\"color: #032F62\">    type User {</span></div><div class='line'><span style=\"color: #032F62\">      id: String!</span></div><div class='line'><span style=\"color: #032F62\">      name: String!</span></div><div class='line'><span style=\"color: #032F62\">      handle: String!</span></div><div class='line'><span style=\"color: #032F62\">      coverUrl: String!</span></div><div class='line'><span style=\"color: #032F62\">      avatarUrl: String!</span></div><div class='line'><span style=\"color: #032F62\">      createdAt: String!</span></div><div class='line'><span style=\"color: #032F62\">      updatedAt: String!</span></div><div class='line'><span style=\"color: #032F62\">    }</span></div><div class='line'><span style=\"color: #032F62\">    type Suggestion {</span></div><div class='line'><span style=\"color: #032F62\">      name: String!</span></div><div class='line'><span style=\"color: #032F62\">      handle: String!</span></div><div class='line'><span style=\"color: #032F62\">      avatarUrl: String!</span></div><div class='line'><span style=\"color: #032F62\">      reason: String!</span></div><div class='line'><span style=\"color: #032F62\">    }</span></div><div class='line'><span style=\"color: #032F62\">  `</span></div><div class='line'></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">server</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">new</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">ApolloServer</span><span style=\"color: #24292E\">({</span></div><div class='line'><span style=\"color: #24292E\">    typeDefs,</span></div><div class='line'><span style=\"color: #24292E\">    plugins: [</span></div><div class='line'><span style=\"color: #24292E\">      </span><span style=\"color: #6F42C1\">ApolloServerPluginDrainHttpServer</span><span style=\"color: #24292E\">({ httpServer }),</span></div><div class='line'><span style=\"color: #24292E\">    ],</span></div><div class='line'><span style=\"color: #24292E\">  })</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> server.</span><span style=\"color: #6F42C1\">start</span><span style=\"color: #24292E\">()</span></div><div class='line'><span style=\"color: #24292E\">  server.</span><span style=\"color: #6F42C1\">applyMiddleware</span><span style=\"color: #24292E\">({ app })</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #D73A49\">return</span><span style=\"color: #24292E\"> server</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code></div></pre>\n<p>In <code>server/src/index.ts</code> add the following imports</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> { createApolloServer } </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"./apollo-server\"</span></div><div class='line'><span style=\"color: #D73A49\">import</span><span style=\"color: #24292E\"> { createServer } </span><span style=\"color: #D73A49\">from</span><span style=\"color: #24292E\"> </span><span style=\"color: #032F62\">\"http\"</span></div></code></div></pre>\n<p>Next, add the following two lines immediately below the one that begins with <code>app.use('/static</code></p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">ts</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">httpServer</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">createServer</span><span style=\"color: #24292E\">(app)</span></div><div class='line'><span style=\"color: #D73A49\">const</span><span style=\"color: #24292E\"> </span><span style=\"color: #005CC5\">apolloServer</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">=</span><span style=\"color: #24292E\"> </span><span style=\"color: #D73A49\">await</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">createApolloServer</span><span style=\"color: #24292E\">(</span></div><div class='line'><span style=\"color: #24292E\">  db,</span></div><div class='line'><span style=\"color: #24292E\">  httpServer,</span></div><div class='line'><span style=\"color: #24292E\">  app</span></div><div class='line'><span style=\"color: #24292E\">)</span></div></code></div></pre>\n<p>To make your life easy, make one more change to the same file and give yourself a nice clickable link in your terminal to the apollo dev tools.</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">diff</div><div class='code-container'><code><div class='line'><span style=\"color: #B31D28\">- chalk.bgWhite.black(`\\thttp://localhost:${PORT}${''}\\t`),</span></div><div class='line'><span style=\"color: #22863A\">+ chalk.bgWhite.black(`\\thttp://localhost:${PORT}${apolloServer.graphqlPath}\\t`),</span></div></code></div></pre>\n<p>Make a git commit, and run <code>yarn dev</code> from within the <code>server</code> subfolder.</p>\n<p>Looking for the link that says <strong>“GraphQL API listening on [URL]”</strong> and click on it. You should see the apollo dev tools.</p>\n<p>BUT — if you try to make a query of any kind, you’ll immediately see an error. We have to create something called a <strong>resolver</strong> to actually grab the data that Apollo server will organize and deserialize for us.</p>\n<p>Here’s a basic query to try, <strong>which we expect to fail at this point</strong>.</p>\n<pre class=\"shiki github-light\" style=\"background-color: #ffffff; color: #24292e\"><div class=\"language-id\">graphql</div><div class='code-container'><code><div class='line'><span style=\"color: #D73A49\">query</span><span style=\"color: #24292E\"> </span><span style=\"color: #6F42C1\">CurrentUser</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">  </span><span style=\"color: #E36209\">currentUser</span><span style=\"color: #24292E\"> {</span></div><div class='line'><span style=\"color: #24292E\">    </span><span style=\"color: #E36209\">name</span></div><div class='line'><span style=\"color: #24292E\">  }</span></div><div class='line'><span style=\"color: #24292E\">}</span></div></code></div></pre>","tableOfContents":"","fields":{"slug":"/course/full-stack-typescript/04-hello-apollo/"},"frontmatter":{"title":"Hello Apollo","course":"full-stack-typescript","date":"March 24, 2022","description":"We'll get our GraphQL API up and running quickly and easily using Apollo server\n"}}},"pageContext":{"slug":"/course/full-stack-typescript/04-hello-apollo/","title":"Hello Apollo","course":"full-stack-typescript","order":4,"previous":{"fields":{"slug":"/course/full-stack-typescript/03-project-tour/"},"frontmatter":{"title":"Project Tour","order":3,"course":"full-stack-typescript","isExercise":null}},"next":{"fields":{"slug":"/course/full-stack-typescript/05-first-resolver/"},"frontmatter":{"title":"First Resolver","order":5,"course":"full-stack-typescript","isExercise":null}}}},
    "staticQueryHashes": ["2785745750","2841359383"]}