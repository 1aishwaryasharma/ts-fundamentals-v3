{"componentChunkName":"component---src-templates-course-page-tsx","path":"/course/intermediate-v1","result":{"data":{"site":{"siteMetadata":{"title":"Learn TypeScript w/ Mike North","courses":[{"id":"fundamentals-v3","title":"TypeScript Fundamentals v3","summary":"By adding static types to the JavaScript programming language, TypeScript delivers a rich and productive code authoring and review experience, while catching entire categories of bugs at compile time instead of runtime. In this workshop, you'll learn everything you need to know in order to confidently and successfully use TypeScript to build a modern JavaScript app."},{"id":"intermediate-v1","title":"Intermediate TypeScript","summary":"It's relatively easy to get started with TypeScript, but the learning curve\nbecomes much steeper once things become more complex and abstract. This workshop\nteaches you how to leverage TypeScript's strengths to provide clarity\nin the face of complexity, while protecting your codebase and team\nfrom it's weaknesses.\n"}]}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"About the Instructor Sr. Staff Engineer @ LinkedIn Works in the Developer Productivity and Happiness org Main focus: Infra UX TypeScript…","fields":{"slug":"/course/fundamentals-v3/01-intro/"},"frontmatter":{"date":"June 08, 2021","title":"Intro","order":1,"isExercise":null,"course":"fundamentals-v3","description":"We'll discuss the goals and agenda of this course, and how to get up and\nrunning with the workshop project in 2 minutes or less.\n"}}},{"node":{"excerpt":"In this chapter we will… Get hands-on with our first TypeScript program and the\ncompiler CLI command Learn how the compiler-emitted JS code…","fields":{"slug":"/course/fundamentals-v3/02-hello-typescript/"},"frontmatter":{"date":"June 08, 2021","title":"Hello TypeScript","order":2,"isExercise":null,"course":"fundamentals-v3","description":"In this chapter, we'll get hands on with our first TypeScript program and the\ncompiler CLI command, and examine a simple program's compiled output\n"}}},{"node":{"excerpt":"Now that we have compiled a simple TypeScript program, let’s look at\nthe basics of the programming language.  Variable Declarations…","fields":{"slug":"/course/fundamentals-v3/03-variables-and-values/"},"frontmatter":{"date":"June 08, 2021","title":"Variables and Values","order":3,"isExercise":null,"course":"fundamentals-v3","description":"We will begin our study of the TypeScript language with simple variables\nand functions.\n"}}},{"node":{"excerpt":"Ways of categorizing type systems Now is a good time to take a step back and think about some conceptual\naspects of types and type systems…","fields":{"slug":"/course/fundamentals-v3/05-structural-vs-nominal-types/"},"frontmatter":{"date":"June 08, 2021","title":"Structural vs. Nominal Types","order":5,"isExercise":null,"course":"fundamentals-v3","description":"In this unit, we will explore how TypeScript is fundamentally different from\nnominal type systems, such as the ones found in Java and C++.\n"}}},{"node":{"excerpt":"Now that we know how to type simple variables and functions, let’s make things\na bit more interesting with collections. In JavaScript, this…","fields":{"slug":"/course/fundamentals-v3/04-objects-arrays-and-tuples/"},"frontmatter":{"date":"June 08, 2021","title":"Objects, Arrays and Tuples","order":4,"isExercise":null,"course":"fundamentals-v3","description":"Now that we know how to type simple variables and functions, let's make things\na bit more interesting with collections: in JavaScript this includes Objects and Arrays.\n"}}},{"node":{"excerpt":"Union and Intersection Types, Conceptually Union and intersection types can conceptually be thought of as logical boolean operators\n(AND, OR…","fields":{"slug":"/course/fundamentals-v3/06-union-and-intersection-types/"},"frontmatter":{"date":"June 08, 2021","title":"Union and Intersection Types","order":6,"isExercise":null,"course":"fundamentals-v3","description":"We will discuss and explore TypeScript's union and intersection types,\nwhich are effectively \"AND\" and \"OR\" boolean logic operators for types.\n"}}},{"node":{"excerpt":"TypeScript provides two mechanisms for centrally defining types and giving them\nuseful and meaningful names: interfaces and type aliases. We…","fields":{"slug":"/course/fundamentals-v3/07-interfaces-and-type-aliases/"},"frontmatter":{"date":"June 08, 2021","title":"Interfaces and Type Aliases","order":7,"isExercise":null,"course":"fundamentals-v3","description":"TypeScript provides two mechanisms for centrally defining types and giving them\nuseful and meaningful names: interfaces and type aliases. We will study both \nconcepts in depth, and explain when it makes sense to use each.\n"}}},{"node":{"excerpt":"Let’s put our knowledge to the test, by defining a type\nthat describes any allowable JSON value. Here’s the relevant section of the…","fields":{"slug":"/course/fundamentals-v3/08-exercise-json-types/"},"frontmatter":{"date":"June 08, 2021","title":"JSON types","order":8,"isExercise":true,"course":"fundamentals-v3","description":"We will take on our first challenge together: defining types\nthat describe any valid JSON value\n"}}},{"node":{"excerpt":"We have dealt with function argument and return types, but there\nare a few more in-depth features we need to cover. Callable types Both type…","fields":{"slug":"/course/fundamentals-v3/09-functions/"},"frontmatter":{"date":"June 08, 2021","title":"Functions","order":9,"isExercise":null,"course":"fundamentals-v3","description":"So far, we have dealt with function argument and return types. There\nare a few more in-depth features we need to cover, including\nmultiple function heads and callable types.\n"}}},{"node":{"excerpt":"TypeScript classes add some powerful and important features on top\nof traditional JavaScript classes. In this unit, we will take a closer…","fields":{"slug":"/course/fundamentals-v3/10-classes/"},"frontmatter":{"date":"June 08, 2021","title":"Classes","order":10,"isExercise":null,"course":"fundamentals-v3","description":"TypeScript classes add some powerful and important features on top\nof traditional JavaScript classes. In this unit, we will take a close look\nclass fields, access modifier keywords and more!\n"}}},{"node":{"excerpt":"Types describe sets of allowed values Let’s imagine that types describe a set of allowed values that a value might be. For example: x could…","fields":{"slug":"/course/fundamentals-v3/11-top-and-bottom-types/"},"frontmatter":{"date":"June 08, 2021","title":"Top and bottom types","order":11,"isExercise":null,"course":"fundamentals-v3","description":"Top types can be anything, bottom types can't be anything. We will also look\nat three \"extreme types\" in TypeScript: any, unknown and never.\n"}}},{"node":{"excerpt":"We’ve explored built-in type guards like typeof and instanceof,\nbut there’s a lot more power in type guards, including the ability\nto define…","fields":{"slug":"/course/fundamentals-v3/12-type-guards/"},"frontmatter":{"date":"June 08, 2021","title":"Type guards and narrowing","order":12,"isExercise":null,"course":"fundamentals-v3","description":"We have explored built-in type guards like typeof and instanceof,\nbut there's a lot more power in type guards, including the ability\nto define your own!\n"}}},{"node":{"excerpt":"There are situations where we have to plan for, and deal with\nthe possibility that values are null or undefined. In this chapter\nwe’ll dive…","fields":{"slug":"/course/fundamentals-v3/13-nullish-values/"},"frontmatter":{"date":"June 08, 2021","title":"Nullish values","order":13,"isExercise":null,"course":"fundamentals-v3","description":"There are situations where we have to plan for, and deal with\nthe possibility that values are null or undefined. In this chapter, \nwe will dive deep into null, undefined, definite assignment,\nand the non-null assertion operator.\n"}}},{"node":{"excerpt":"Generics allow us to parameterize types, which unlocks great opportunity\nto reuse types broadly across a TypeScript project. This is a…","fields":{"slug":"/course/fundamentals-v3/14-generics/"},"frontmatter":{"date":"June 08, 2021","title":"Generics","order":14,"isExercise":null,"course":"fundamentals-v3","description":"Generics allow us to parameterize types, which unlocks great opportunity\nto reuse types broadly across a TypeScript project.\n"}}},{"node":{"excerpt":"Let’s put our newfound knowledge around Generics to the test by building out\nsome higher-order functions that operate on dictionaries:","fields":{"slug":"/course/fundamentals-v3/15-dict-map-filter-reduce/"},"frontmatter":{"date":"June 08, 2021","title":"Dictionary map, filter and reduce","order":15,"isExercise":true,"course":"fundamentals-v3","description":"Many of us use array the higher-order functions map, filter and reduce\nquite often. Let's build out similar utilities that operate on dictionaries!\n"}}},{"node":{"excerpt":"Now that we have covered the basic use of Generics, let’s layer on\ntwo more concepts: how scoping work with type params, and how we \ncan…","fields":{"slug":"/course/fundamentals-v3/16-type-param-scopes-and-constraints/"},"frontmatter":{"date":"June 10, 2021","title":"Generics Scopes and Constraints","order":16,"isExercise":null,"course":"fundamentals-v3","description":"In this chapter, we'll learn about scopes and constraints, as they pertain to\ntype params, and what the language would look like if we didn't have these\nimportant tools\n"}}},{"node":{"excerpt":"About the Instructor Sr. Staff Engineer @ LinkedIn Works in the Developer Productivity and Happiness org Main focus: Infra UX TypeScript…","fields":{"slug":"/course/intermediate-v1/01-project-setup/"},"frontmatter":{"date":"June 10, 2021","title":"Intro","order":1,"isExercise":null,"course":"intermediate-v1","description":"We'll discuss the goals and agenda of this course, and how to get up and\nrunning with the workshop project in 2 minutes or less.\n"}}},{"node":{"excerpt":"We have different types of “named things” in TypeScript, including values and functions (and occasionally things that can be used as both…","fields":{"slug":"/course/intermediate-v1/02-declaration-merging/"},"frontmatter":{"date":"June 10, 2021","title":"Declaration Merging","order":2,"isExercise":null,"course":"intermediate-v1","description":"In order to truly understand how types and values \"stack\" on\neach other, we'll first tackle the concept of declaration merging.\nOften when people grasp how TypeScript handles this, they never look\nat the language the same way again\n"}}},{"node":{"excerpt":"The JS ecosystem was without an “official” module specification\nuntil 2015, which led to a variety of different community-defined\nmodule…","fields":{"slug":"/course/intermediate-v1/03-modules/"},"frontmatter":{"date":"June 10, 2021","title":"Modules & CJS interop","order":3,"isExercise":null,"course":"intermediate-v1","description":"Although most of the code we write today is in the form of\nES modules, plenty of dependencies are packaged in the \nCommonJS module format. In this chapter, we'll look at modules in depth\nso that you have all the tools you need in order to consume all\nthe dependencies you care about, while keeping the TS compiler happy\n"}}},{"node":{"excerpt":"Type queries allow us to obtain type information from values, which\nis an incredibly important capability — particularly when working\nwith…","fields":{"slug":"/course/intermediate-v1/04-type-queries/"},"frontmatter":{"date":"June 10, 2021","title":"Type Queries","order":4,"isExercise":null,"course":"intermediate-v1","description":"Type queries allow us to obtain type information from values.\nAs we work toward building our own \"standard library\" of \nutility types, we'll need this important tool in our toolbox\n"}}},{"node":{"excerpt":"Ternary operator with values In a wide range of programming languages, we can find if/then/else logic.\nJavaScript provides a ternary…","fields":{"slug":"/course/intermediate-v1/05-conditional-types/"},"frontmatter":{"date":"June 10, 2021","title":"Conditional Types","order":5,"isExercise":null,"course":"intermediate-v1","description":"Conditional types can be thought of as \"a ternary operator, for types\". \nWhile there is no \"control flow\" in a world where we're describing constraints with types\n(instead of procedural steps to execute \"in a flow\"), this tool does provide\nan important foundation for switching logic based on type information\n"}}},{"node":{"excerpt":"There are several types that are broadly useful enough that TypeScript\nincludes them as part of the “core types” for the JS language.  Now…","fields":{"slug":"/course/intermediate-v1/06-extract-exclude/"},"frontmatter":{"date":"June 10, 2021","title":"Extract and Exclude","order":6,"isExercise":null,"course":"intermediate-v1","description":"Now that we've learned about conditional types, let's study\nthe built-in utility types Extract and Exclude, which are\n*implemented* with conditional types\n"}}},{"node":{"excerpt":"Conditional types are not just for switching behavior based\non comparison — they can be used with an ‘infer’ keyword\nto access sub-parts of…","fields":{"slug":"/course/intermediate-v1/07-infer/"},"frontmatter":{"date":"June 10, 2021","title":"Inference with conditional types","order":7,"isExercise":null,"course":"intermediate-v1","description":"Conditional types are not just for switching behavior based\non comparison -- they can be used with an 'infer' keyword\nto access sub-parts of type information within a larger type\n"}}},{"node":{"excerpt":"Indexed Access types provide a mechanism for retrieving\npart(s) of an array or object type via indices. We’ll \nlook at how this kind of type…","fields":{"slug":"/course/intermediate-v1/08-indexed-access-types/"},"frontmatter":{"date":"June 10, 2021","title":"Indexed Access Types","order":8,"isExercise":null,"course":"intermediate-v1","description":"Indexed Access types provide a mechanism for retrieving\npart(s) of an array or object type via indices.\n"}}},{"node":{"excerpt":"Mapped allow types to be defined in other types through a\nmuch more flexible version of an index signature. We’ll\nstudy this type in detail…","fields":{"slug":"/course/intermediate-v1/09-mapped-types/"},"frontmatter":{"date":"June 10, 2021","title":"Mapped Types","order":9,"isExercise":null,"course":"intermediate-v1","description":"Mapped allow types to be defined in other types through a \nmuch more flexible version of an index signature. We'll \nstudy this type in detail, and demonstrate how it makes\nlanguage features like indexed access types and conditional\ntypes even more powerful!\n"}}}]}},"pageContext":{"title":"Intermediate TypeScript","id":"intermediate-v1","disabled":false,"summary":"It's relatively easy to get started with TypeScript, but the learning curve\nbecomes much steeper once things become more complex and abstract. This workshop\nteaches you how to leverage TypeScript's strengths to provide clarity\nin the face of complexity, while protecting your codebase and team\nfrom it's weaknesses.\n"}},"staticQueryHashes":["2074799692","2841359383"]}