{"version":3,"file":"component---src-templates-course-page-tsx-f7bab5fe1ed9f6cedd26.js","mappings":"+LAmDA,EAzCkE,SAAC,GAG5D,IAFLA,EAEI,EAFJA,QACAC,EACI,EADJA,SAEAC,QAAQC,IAAI,CAAEH,QAAAA,IACd,IAAMI,EACJ,sBAAIC,UAAU,eACXL,EAAQM,QAAO,SAAAC,GAAC,OAAKA,EAAEC,YAAUC,KAAI,SAACF,GAAD,OACpC,sBAAIG,IAAKH,EAAEI,GAAIN,UAAU,cACvB,gBAAC,EAAAO,KAAD,CACEC,gBAAgB,SAChBC,MAAO,CACLC,UAAU,OACVC,MAAM,WAERC,GAAE,WAAaV,EAAEI,IAEhBJ,EAAEW,YAOb,OACE,uBACEb,UAAU,cACVS,MAAO,CACLK,WAAW,OACXC,YAAY,OACZC,UAAUC,EAAAA,EAAAA,IAAO,IACjBC,SAAYD,EAAAA,EAAAA,IAAO,KAAZ,KAAoBA,EAAAA,EAAAA,IAAO,EAAI,KAGxC,8BAASlB,GACT,4BAAOH,GACP,oCAAW,IAAIuB,MAAOC,cAAtB,2B,UCCN,IA8DA,EA9D0E,SAAC,GAGvD,IAFLC,EAEI,EAFjBC,YACAC,EACiB,EADjBA,KAEA,IAAKF,EAAQ,MAAM,IAAIG,MAAM,aAC7B,IAAM7B,EAAU4B,EAAKE,KAAKC,aAAa/B,QACjCgC,EAAQJ,EAAKK,kBAAkBC,MACrC,OACE,gBAAC,EAAD,CAAclC,QAASA,GACrB,gBAAC,IAAD,CAAKkB,MAAOQ,EAAOR,MAAOiB,YAAaT,EAAOU,UAC9C,8BACE,sBACEtB,MAAO,CACLuB,WAAWf,EAAAA,EAAAA,IAAO,GAClBgB,aAAc,IAGfZ,EAAOR,QAGZ,2BAASJ,MAAO,CAAEuB,UAAW,SAAWX,EAAOU,SAC9CJ,EACE1B,QAAO,SAACiC,GAAD,OAAOA,EAAEC,KAAKC,YAAYf,SAAWA,EAAOf,MACnD+B,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,KAAKC,YAAYI,MAAQD,EAAEJ,KAAKC,YAAYI,SAC7DpC,KAAI,WAAWqC,GAAS,IA7BZC,EA6BLP,EAAgB,EAAhBA,KACAtB,EAAQsB,EAAKC,YAAYvB,OAASsB,EAAKQ,OAAOC,KAC5CC,EAAeV,EAAKC,YAApBS,WACR,OACE,2BAAS7C,UAAW,kBAAoB6C,EAAa,YAAc,IAAKxC,IAAK8B,EAAKQ,OAAOC,MACvF,8BACE,sBACEnC,MAAO,CACLwB,cAAchB,EAAAA,EAAAA,IAAO,EAAI,KAG3B,gBAAC,EAAAV,KAAD,CAAME,MAAO,CAAEC,UAAU,QAAWE,GAAIuB,EAAKQ,OAAOC,MAClD,wBAAM5C,UAAU,0BAzCf0C,EA0CcD,EAAM,GAzC/B,GAAU,IAAKC,EACjB,GAAIA,GA0CQ,wBAAM1C,UAAU,yBAAyBa,KAG7C,yBAAOb,UAAU,wBAAwBmC,EAAKC,YAAYU,OAE5D,+BACE,qBAAG9C,UAAU,8BACX+C,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYN,aAAeK,EAAKc,gBAQ3D,8BACE,gBAAC,IAAD","sources":["webpack://website/./src/components/course-layout.tsx","webpack://website/./src/templates/course-page.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { ICourse } from '../templates/course-page';\n\nimport { rhythm } from '../utils/typography';\n\ninterface ICourseLayoutProps {\n  courses: ICourse[];\n}\n\nconst CourseLayout: React.FunctionComponent<ICourseLayoutProps> = ({\n  courses,\n  children,\n}) => {\n  console.log({ courses })\n  const header = (\n    <ul className=\"course-tabs\">\n      {courses.filter(c => !c.disabled).map((c) => (\n        <li key={c.id} className=\"course-tab\">\n          <Link\n            activeClassName=\"active\"\n            style={{\n              boxShadow: `none`,\n              color: `inherit`,\n            }}\n            to={`/course/${c.id}`}\n          >\n            {c.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n\n  return (\n    <div\n      className='course-page'\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(30),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>Â© {new Date().getFullYear()} All Rights Reserved.</footer>\n    </div>\n  );\n};\n\nexport default CourseLayout;\n","import { Link, graphql } from 'gatsby';\nimport * as React from 'react';\nimport Bio from '../components/bio';\nimport CourseLayout from '../components/course-layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\nexport interface ICourse {\n  id: string;\n  title: string;\n  disabled: boolean;\n  summary: string;\n}\n\ninterface ICourseTemplateProps {\n  pageContext: ICourse;\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        courses: ICourse[];\n      };\n    };\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          excerpt: string;\n          frontmatter: {\n            title: string;\n            course: string;\n            date: string;\n            isExercise: boolean;\n            order: number;\n            description: string;\n          };\n          fields: { slug: string; course: string };\n        };\n      }[];\n    };\n  };\n}\n\nfunction formatOrder(n: number): string {\n  if (n < 10) return `0${n}`;\n  return `${n}`;\n}\n\nconst CoursePageTemplate: React.FunctionComponent<ICourseTemplateProps> = ({\n  pageContext: course,\n  data,\n}): JSX.Element => {\n  if (!course) throw new Error('no course');\n  const courses = data.site.siteMetadata.courses;\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <CourseLayout courses={courses}>\n      <SEO title={course.title} description={course.summary} />\n      <header>\n        <h1\n          style={{\n            marginTop: rhythm(1),\n            marginBottom: 0,\n          }}\n        >\n          {course.title}\n        </h1>\n      </header>\n      <section style={{ marginTop: '10px' }}>{course.summary}</section>\n      {posts\n        .filter((p) => p.node.frontmatter.course === course.id)\n        .sort((a, b) => a.node.frontmatter.order - b.node.frontmatter.order)\n        .map(({ node }, idx) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          const { isExercise } = node.frontmatter;\n          return (\n            <article className={\"course-article\" + (isExercise ? ' exercise' : '')} key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    <span className=\"course-article__order\">\n                      {formatOrder(idx + 1)}\n                    </span>\n                    <span className=\"course-article__title\">{title}</span>\n                  </Link>\n                </h3>\n                <small className=\"course-article__date\">{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p className=\"course-article__description\"\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          );\n        })}\n\n      <footer>\n        <Bio />\n      </footer>\n    </CourseLayout>\n  );\n};\n\nexport default CoursePageTemplate;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        courses {\n          id\n          title\n          summary\n          disabled\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: ASC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            order\n            isExercise\n            course\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["courses","children","console","log","header","className","filter","c","disabled","map","key","id","Link","activeClassName","style","boxShadow","color","to","title","marginLeft","marginRight","maxWidth","rhythm","padding","Date","getFullYear","course","pageContext","data","Error","site","siteMetadata","posts","allMarkdownRemark","edges","description","summary","marginTop","marginBottom","p","node","frontmatter","sort","a","b","order","idx","n","fields","slug","isExercise","date","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}